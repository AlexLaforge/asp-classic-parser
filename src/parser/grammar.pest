// ASP Classic Grammar - Stage 1: Basic Syntax
// This grammar defines the basic structure of ASP Classic files, including:
// - ASP tags and delimiters
// - Comments
// - Basic statements (Response.Write)
// - Statement separators
// - Line continuation
// - Simple expressions

// Basic whitespace and comment handling
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT = _{ single_line_comment }
single_line_comment = _{ ("'" | "REM ") ~ (!("\n") ~ ANY)* }

// ASP delimiters - Define the boundaries of ASP code blocks
asp_open_tag = { "<%" }             // Standard opening ASP tag
asp_close_tag = { "%>" }            // Standard closing ASP tag
asp_open_equal = { "<%=" }          // Opening tag for ASP expressions (output)

// Line continuation - VBScript allows line continuation with underscore
line_continuation = _{ "_" ~ WHITESPACE* ~ "\r"? ~ "\n" }

// String literal with proper quote matching
string_literal = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" | "'" ~ (!("'") ~ ANY)* ~ "'" }

// Variable reference
variable = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

// Operators
operator = { "+" | "-" | "*" | "/" | "\\" | "^" | "&" | "=" | "<>" | "<" | ">" | "<=" | ">=" }

// Expression terms (primary elements of expressions)
term = { 
    string_literal | 
    variable |
    "(" ~ expression ~ ")" 
}

// Expressions (simplified for now, will be expanded in future stages)
expression = { 
    term ~ (operator ~ term)* | 
    (!(asp_close_tag | statement_separator) ~ ANY)+ 
}

// Basic statements
statement = { 
    response_write | 
    var_declaration |
    assignment |
    other_statement
}
response_write = { "Response.Write" ~ WHITESPACE* ~ expression }  // Common ASP output method
var_declaration = { ("var" | "dim") ~ WHITESPACE+ ~ variable ~ (WHITESPACE* ~ "=" ~ WHITESPACE* ~ expression)? }
assignment = { variable ~ WHITESPACE* ~ "=" ~ WHITESPACE* ~ expression }
other_statement = { (!(asp_close_tag | statement_separator) ~ ANY)+ }

// Statement separator - allows multiple statements on one line
statement_separator = { ":" }

// ASP blocks
asp_script_block = ${ asp_open_tag ~ inner_asp_content ~ asp_close_tag }  // Complete ASP code block
asp_expression_block = ${ asp_open_equal ~ expression ~ asp_close_tag }  // ASP expression block (<%=...%>)
inner_asp_content = @{ (!(asp_close_tag) ~ ANY)* }

// HTML content between ASP blocks or at the beginning/end of the file
html_content = @{ (!(asp_open_tag | asp_open_equal) ~ ANY)+ }

// ASP file entry rule - The main rule that matches a complete ASP file
file = { SOI ~ (asp_script_block | asp_expression_block | html_content)* ~ EOI }